jobs:
- job: ExternalTests
  pool:
    vmImage: 'ubuntu-latest'
  variables:
    - name: NUMBA_DISABLE_JIT
      value: 1
    - name: ARVIZ_CI_MACHINE
      value: 1
  timeoutInMinutes: 360
  strategy:
    matrix:
      Python_39_Latest:
        python.version: "3.9"
        pystan.version: "latest"
        cmdstanpy.version: "latest"
        pymc3.version: "latest"
        emcee.version: "latest"
        name: "External latest"

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version): $(name)'

  - script: |
      ls
      env
      pwd
      gcc --version
      python --version
      which gcc
      which clang
    displayName: 'Debug information'

  - script: |
      python -m pip install --upgrade pip
      python -m pip install wheel

      if [ "$(pystan.version)" = "latest" ]; then
          python -m pip --no-cache-dir install pystan
      else
          if [ "$(pystan.version)" = "latest" ]; then
              python -m pip --no-cache-dir install pystan
          else
              python -m pip --no-cache-dir install pystan=="$(pystan.version)"
          fi
      fi

    displayName: 'Install packages'

  - script: |
      python -m pip install  --no-cache-dir -r requirements.txt
      python -m pip install --no-cache-dir -r requirements-dev.txt
    displayName: 'Install requirements'

  - script: |
      python -m pip install .
    displayName: 'Install ArviZ package'

  - script: |
      python -m pip freeze
    displayName: 'Print packages'

  - script: |
      pytest arviz/tests/helpers.py
    displayName: 'precompile models'

  - script: |
      python -m pytest arviz/tests/external_tests --cov arviz --cov-report=xml
    displayName: 'pytest'
